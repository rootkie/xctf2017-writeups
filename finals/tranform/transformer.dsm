;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2017 Retargetable Decompiler <info@retdec.com>
;;
;; Decompiler release: v2.2.1 (2016-09-07)
;; Decompilation date: 2017-06-17 07:30:17
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80483b8 -- 0x80483da
0x80483b8:   53                     	push ebx
0x80483b9:   83 ec 08               	sub esp, 0x8
0x80483bc:   e8 ef 00 00 00         	call 0x80484b0 <__x86.get_pc_thunk.bx>
0x80483c1:   81 c3 3f 1c 00 00      	add ebx, 0x1c3f
0x80483c7:   8b 83 fc ff ff ff      	mov eax, dword [ ebx + 0xfffffffc ]
0x80483cd:   85 c0                  	test eax, eax
0x80483cf:   74 05                  	jz 0x80483d6 <_init+0x1e>
0x80483d1:   e8 9a 00 00 00         	call 0x8048470 <function_8048470>
0x80483d6:   83 c4 08               	add esp, 0x8
0x80483d9:   5b                     	pop ebx
0x80483da:   c3                     	ret
; section: .plt
; function: function_80483e0 at 0x80483e0 -- 0x804846f
0x80483e0:   ff 35 04 a0 04 08      	push dword [ 0x804a004 ]
0x80483e6:   ff 25 08 a0 04 08      	jmp dword [ 0x804a008 ]
0x80483ec:   00 00                  	add byte [ eax ], al
0x80483ee:   00 00                  	add byte [ eax ], al
0x80483f0:   ff 25 0c a0 04 08      	jmp dword [ 0x804a00c ]
0x80483f6:   68 00 00 00 00         	push 0x0
0x80483fb:   e9 e0 ff ff ff         	jmp 0xffffffe0
0x8048400:   ff 25 10 a0 04 08      	jmp dword [ 0x804a010 ]
0x8048406:   68 08 00 00 00         	push 0x8
0x804840b:   e9 d0 ff ff ff         	jmp 0xffffffd0
0x8048410:   ff 25 14 a0 04 08      	jmp dword [ 0x804a014 ]
0x8048416:   68 10 00 00 00         	push 0x10
0x804841b:   e9 c0 ff ff ff         	jmp 0xffffffc0
0x8048420:   ff 25 18 a0 04 08      	jmp dword [ 0x804a018 ]
0x8048426:   68 18 00 00 00         	push 0x18
0x804842b:   e9 b0 ff ff ff         	jmp 0xffffffb0
0x8048430:   ff 25 1c a0 04 08      	jmp dword [ 0x804a01c ]
0x8048436:   68 20 00 00 00         	push 0x20
0x804843b:   e9 a0 ff ff ff         	jmp 0xffffffa0
0x8048440:   ff 25 20 a0 04 08      	jmp dword [ 0x804a020 ]
0x8048446:   68 28 00 00 00         	push 0x28
0x804844b:   e9 90 ff ff ff         	jmp 0xffffff90
0x8048450:   ff 25 24 a0 04 08      	jmp dword [ 0x804a024 ]
0x8048456:   68 30 00 00 00         	push 0x30
0x804845b:   e9 80 ff ff ff         	jmp 0xffffff80
0x8048460:   ff 25 28 a0 04 08      	jmp dword [ 0x804a028 ]
0x8048466:   68 38 00 00 00         	push 0x38
0x804846b:   e9 70 ff ff ff         	jmp 0xffffff70
; section: .plt.got
; function: function_8048470 at 0x8048470 -- 0x8048477
0x8048470:   ff 25 fc 9f 04 08      	jmp dword [ 0x8049ffc <unknown_8049ffc> ]
0x8048476:   66 90                  	xchg ax, ax
; section: .text
; function: _start at 0x8048480 -- 0x80484af
0x8048480:   31 ed                  	xor ebp, ebp
0x8048482:   5e                     	pop esi
0x8048483:   89 e1                  	mov ecx, esp
0x8048485:   83 e4 f0               	and esp, 0xfffffff0
0x8048488:   50                     	push eax
0x8048489:   54                     	push esp
0x804848a:   52                     	push edx
0x804848b:   68 b0 88 04 08         	push 0x80488b0
0x8048490:   68 50 88 04 08         	push 0x8048850
0x8048495:   51                     	push ecx
0x8048496:   56                     	push esi
0x8048497:   68 de 86 04 08         	push 0x80486de
0x804849c:   e8 9f ff ff ff         	call 0x8048440 <__libc_start_main>
0x80484a1:   f4                     	hlt
0x80484a2:   66 90                  	xchg ax, ax
0x80484a4:   66 90                  	xchg ax, ax
0x80484a6:   66 90                  	xchg ax, ax
0x80484a8:   66 90                  	xchg ax, ax
0x80484aa:   66 90                  	xchg ax, ax
0x80484ac:   66 90                  	xchg ax, ax
0x80484ae:   66 90                  	xchg ax, ax
; function: __x86.get_pc_thunk.bx at 0x80484b0 -- 0x80484bf
0x80484b0:   8b 1c 24               	mov ebx, dword [ esp ]
0x80484b3:   c3                     	ret
0x80484b4:   66 90                  	xchg ax, ax
0x80484b6:   66 90                  	xchg ax, ax
0x80484b8:   66 90                  	xchg ax, ax
0x80484ba:   66 90                  	xchg ax, ax
0x80484bc:   66 90                  	xchg ax, ax
0x80484be:   66 90                  	xchg ax, ax
; function: deregister_tm_clones at 0x80484c0 -- 0x80484ef
0x80484c0:   b8 37 a0 04 08         	mov eax, 0x804a037
0x80484c5:   2d 34 a0 04 08         	sub eax, 0x804a034
0x80484ca:   83 f8 06               	cmp eax, 0x6
0x80484cd:   76 1a                  	jbe 0x80484e9 <deregister_tm_clones+0x29>
0x80484cf:   b8 00 00 00 00         	mov eax, 0x0
0x80484d4:   85 c0                  	test eax, eax
0x80484d6:   74 11                  	jz 0x80484e9 <deregister_tm_clones+0x29>
0x80484d8:   55                     	push ebp
0x80484d9:   89 e5                  	mov ebp, esp
0x80484db:   83 ec 14               	sub esp, 0x14
0x80484de:   68 34 a0 04 08         	push 0x804a034
0x80484e3:   ff d0                  	call eax
0x80484e5:   83 c4 10               	add esp, 0x10
0x80484e8:   c9                     	leave
0x80484e9:   f3 c3                  	rep ret
0x80484eb:   90                     	nop
0x80484ec:   8d 74 26 00            	lea esi, dword [ esi + 0x0 ]
; function: register_tm_clones at 0x80484f0 -- 0x804852f
0x80484f0:   b8 34 a0 04 08         	mov eax, 0x804a034
0x80484f5:   2d 34 a0 04 08         	sub eax, 0x804a034
0x80484fa:   c1 f8 02               	sar eax, 0x2
0x80484fd:   89 c2                  	mov edx, eax
0x80484ff:   c1 ea 1f               	shr edx, 0x1f
0x8048502:   01 d0                  	add eax, edx
0x8048504:   d1 f8                  	sar eax, 1
0x8048506:   74 1b                  	jz 0x8048523 <register_tm_clones+0x33>
0x8048508:   ba 00 00 00 00         	mov edx, 0x0
0x804850d:   85 d2                  	test edx, edx
0x804850f:   74 12                  	jz 0x8048523 <register_tm_clones+0x33>
0x8048511:   55                     	push ebp
0x8048512:   89 e5                  	mov ebp, esp
0x8048514:   83 ec 10               	sub esp, 0x10
0x8048517:   50                     	push eax
0x8048518:   68 34 a0 04 08         	push 0x804a034
0x804851d:   ff d2                  	call edx
0x804851f:   83 c4 10               	add esp, 0x10
0x8048522:   c9                     	leave
0x8048523:   f3 c3                  	rep ret
0x8048525:   8d 74 26 00            	lea esi, dword [ esi + 0x0 ]
0x8048529:   8d bc 27 00 00 00 00   	lea edi, dword [ edi + 0x0 ]
; function: __do_global_dtors_aux at 0x8048530 -- 0x804854f
0x8048530:   80 3d 38 a0 04 08 00   	cmp byte [ 0x804a038 ], 0x0
0x8048537:   75 13                  	jnz 0x804854c <__do_global_dtors_aux+0x1c>
0x8048539:   55                     	push ebp
0x804853a:   89 e5                  	mov ebp, esp
0x804853c:   83 ec 08               	sub esp, 0x8
0x804853f:   e8 7c ff ff ff         	call 0x80484c0 <deregister_tm_clones>
0x8048544:   c6 05 38 a0 04 08 01   	mov byte [ 0x804a038 ], 0x1
0x804854b:   c9                     	leave
0x804854c:   f3 c3                  	rep ret
0x804854e:   66 90                  	xchg ax, ax
; function: frame_dummy at 0x8048550 -- 0x804857a
0x8048550:   b8 10 9f 04 08         	mov eax, 0x8049f10
0x8048555:   8b 10                  	mov edx, dword [ eax ]
0x8048557:   85 d2                  	test edx, edx
0x8048559:   75 05                  	jnz 0x8048560 <frame_dummy+0x10>
0x804855b:   eb 93                  	jmp 0x80484f0 <register_tm_clones>
0x804855d:   8d 76 00               	lea esi, dword [ esi + 0x0 ]
0x8048560:   ba 00 00 00 00         	mov edx, 0x0
0x8048565:   85 d2                  	test edx, edx
0x8048567:   74 f2                  	jz 0x804855b <frame_dummy+0xb>
0x8048569:   55                     	push ebp
0x804856a:   89 e5                  	mov ebp, esp
0x804856c:   83 ec 14               	sub esp, 0x14
0x804856f:   50                     	push eax
0x8048570:   ff d2                  	call edx
0x8048572:   83 c4 10               	add esp, 0x10
0x8048575:   c9                     	leave
0x8048576:   e9 75 ff ff ff         	jmp 0x80484f0 <register_tm_clones>
; function: stealth at 0x804857b -- 0x804858d
0x804857b:   55                     	push ebp
0x804857c:   89 e5                  	mov ebp, esp
0x804857e:   68 d0 88 04 08         	push 0x80488d0 ; "/bin/sh"
0x8048583:   e8 98 fe ff ff         	call 0x8048420 <system>
0x8048588:   83 c4 04               	add esp, 0x4
0x804858b:   90                     	nop
0x804858c:   c9                     	leave
0x804858d:   c3                     	ret
; function: transcheck at 0x804858e -- 0x80486dd
0x804858e:   55                     	push ebp
0x804858f:   89 e5                  	mov ebp, esp
0x8048591:   53                     	push ebx
0x8048592:   83 ec 18               	sub esp, 0x18
0x8048595:   ff 75 08               	push dword [ ebp + 0x8 ]
0x8048598:   e8 93 fe ff ff         	call 0x8048430 <strlen>
0x804859d:   83 c4 04               	add esp, 0x4
0x80485a0:   89 c3                  	mov ebx, eax
0x80485a2:   ff 75 0c               	push dword [ ebp + 0xc ]
0x80485a5:   e8 86 fe ff ff         	call 0x8048430 <strlen>
0x80485aa:   83 c4 04               	add esp, 0x4
0x80485ad:   39 c3                  	cmp ebx, eax
0x80485af:   74 0a                  	jz 0x80485bb <transcheck+0x2d>
0x80485b1:   b8 00 00 00 00         	mov eax, 0x0
0x80485b6:   e9 1e 01 00 00         	jmp 0x80486d9 <transcheck+0x14b>
0x80485bb:   6a 04                  	push 0x4
0x80485bd:   6a 1a                  	push 0x1a
0x80485bf:   e8 9c fe ff ff         	call 0x8048460 <calloc>
0x80485c4:   83 c4 08               	add esp, 0x8
0x80485c7:   89 45 e8               	mov dword [ ebp + 0xffffffe8 ], eax
0x80485ca:   6a 04                  	push 0x4
0x80485cc:   6a 1a                  	push 0x1a
0x80485ce:   e8 8d fe ff ff         	call 0x8048460 <calloc>
0x80485d3:   83 c4 08               	add esp, 0x8
0x80485d6:   89 45 e4               	mov dword [ ebp + 0xffffffe4 ], eax
0x80485d9:   8b 45 08               	mov eax, dword [ ebp + 0x8 ]
0x80485dc:   89 45 f8               	mov dword [ ebp + 0xfffffff8 ], eax
0x80485df:   8b 45 0c               	mov eax, dword [ ebp + 0xc ]
0x80485e2:   89 45 f4               	mov dword [ ebp + 0xfffffff4 ], eax
0x80485e5:   e9 9c 00 00 00         	jmp 0x8048686 <transcheck+0xf8>
0x80485ea:   8b 45 f8               	mov eax, dword [ ebp + 0xfffffff8 ]
0x80485ed:   0f b6 10               	movzx edx, byte [ eax ]
0x80485f0:   66 0f be ca            	movsx cx, dl
0x80485f4:   89 c8                  	mov eax, ecx
0x80485f6:   c1 e0 02               	shl eax, 0x2
0x80485f9:   01 c8                  	add eax, ecx
0x80485fb:   c1 e0 04               	shl eax, 0x4
0x80485fe:   29 c8                  	sub eax, ecx
0x8048600:   66 c1 e8 08            	shr ax, 0x8
0x8048604:   89 c1                  	mov ecx, eax
0x8048606:   c0 f9 03               	sar cl, 0x3
0x8048609:   89 d0                  	mov eax, edx
0x804860b:   c0 f8 07               	sar al, 0x7
0x804860e:   29 c1                  	sub ecx, eax
0x8048610:   89 c8                  	mov eax, ecx
0x8048612:   b9 1a 00 00 00         	mov ecx, 0x1a
0x8048617:   0f af c1               	imul eax, ecx
0x804861a:   29 c2                  	sub edx, eax
0x804861c:   89 d0                  	mov eax, edx
0x804861e:   0f be c0               	movsx eax, al
0x8048621:   8d 14 85 00 00 00 00   	lea edx, dword [ eax * 0x2 + 0x0 ]
0x8048628:   8b 45 e8               	mov eax, dword [ ebp + 0xffffffe8 ]
0x804862b:   01 d0                  	add eax, edx
0x804862d:   8b 10                  	mov edx, dword [ eax ]
0x804862f:   83 c2 01               	add edx, 0x1
0x8048632:   89 10                  	mov dword [ eax ], edx
0x8048634:   8b 45 f4               	mov eax, dword [ ebp + 0xfffffff4 ]
0x8048637:   0f b6 10               	movzx edx, byte [ eax ]
0x804863a:   66 0f be ca            	movsx cx, dl
0x804863e:   89 c8                  	mov eax, ecx
0x8048640:   c1 e0 02               	shl eax, 0x2
0x8048643:   01 c8                  	add eax, ecx
0x8048645:   c1 e0 04               	shl eax, 0x4
0x8048648:   29 c8                  	sub eax, ecx
0x804864a:   66 c1 e8 08            	shr ax, 0x8
0x804864e:   89 c1                  	mov ecx, eax
0x8048650:   c0 f9 03               	sar cl, 0x3
0x8048653:   89 d0                  	mov eax, edx
0x8048655:   c0 f8 07               	sar al, 0x7
0x8048658:   29 c1                  	sub ecx, eax
0x804865a:   89 c8                  	mov eax, ecx
0x804865c:   b9 1a 00 00 00         	mov ecx, 0x1a
0x8048661:   0f af c1               	imul eax, ecx
0x8048664:   29 c2                  	sub edx, eax
0x8048666:   89 d0                  	mov eax, edx
0x8048668:   0f be c0               	movsx eax, al
0x804866b:   8d 14 85 00 00 00 00   	lea edx, dword [ eax * 0x2 + 0x0 ]
0x8048672:   8b 45 e4               	mov eax, dword [ ebp + 0xffffffe4 ]
0x8048675:   01 d0                  	add eax, edx
0x8048677:   8b 10                  	mov edx, dword [ eax ]
0x8048679:   83 c2 01               	add edx, 0x1
0x804867c:   89 10                  	mov dword [ eax ], edx
0x804867e:   83 45 f8 01            	add dword [ ebp + 0xfffffff8 ], 0x1
0x8048682:   83 45 f4 01            	add dword [ ebp + 0xfffffff4 ], 0x1
0x8048686:   8b 45 f8               	mov eax, dword [ ebp + 0xfffffff8 ]
0x8048689:   0f b6 00               	movzx eax, byte [ eax ]
0x804868c:   84 c0                  	test al, al
0x804868e:   0f 85 56 ff ff ff      	jnz 0x80485ea <transcheck+0x5c>
0x8048694:   c6 45 f3 01            	mov byte [ ebp + 0xfffffff3 ], 0x1
0x8048698:   c7 45 ec 00 00 00 00   	mov dword [ ebp + 0xffffffec ], 0x0
0x804869f:   eb 2e                  	jmp 0x80486cf <transcheck+0x141>
0x80486a1:   8b 45 ec               	mov eax, dword [ ebp + 0xffffffec ]
0x80486a4:   8d 14 85 00 00 00 00   	lea edx, dword [ eax * 0x2 + 0x0 ]
0x80486ab:   8b 45 e8               	mov eax, dword [ ebp + 0xffffffe8 ]
0x80486ae:   01 d0                  	add eax, edx
0x80486b0:   8b 10                  	mov edx, dword [ eax ]
0x80486b2:   8b 45 ec               	mov eax, dword [ ebp + 0xffffffec ]
0x80486b5:   8d 0c 85 00 00 00 00   	lea ecx, dword [ eax * 0x2 + 0x0 ]
0x80486bc:   8b 45 e4               	mov eax, dword [ ebp + 0xffffffe4 ]
0x80486bf:   01 c8                  	add eax, ecx
0x80486c1:   8b 00                  	mov eax, dword [ eax ]
0x80486c3:   39 c2                  	cmp edx, eax
0x80486c5:   74 04                  	jz 0x80486cb <transcheck+0x13d>
0x80486c7:   c6 45 f3 00            	mov byte [ ebp + 0xfffffff3 ], 0x0
0x80486cb:   83 45 ec 01            	add dword [ ebp + 0xffffffec ], 0x1
0x80486cf:   83 7d ec 19            	cmp dword [ ebp + 0xffffffec ], 0x19
0x80486d3:   7e cc                  	jle 0x80486a1 <transcheck+0x113>
0x80486d5:   0f b6 45 f3            	movzx eax, byte [ ebp + 0xfffffff3 ]
0x80486d9:   8b 5d fc               	mov ebx, dword [ ebp + 0xfffffffc ]
0x80486dc:   c9                     	leave
0x80486dd:   c3                     	ret
; function: main at 0x80486de -- 0x804884f
0x80486de:   55                     	push ebp
0x80486df:   89 e5                  	mov ebp, esp
0x80486e1:   81 ec 80 01 00 00      	sub esp, 0x180
0x80486e7:   68 d8 88 04 08         	push 0x80488d8 ; " _____                      __                                     "
0x80486ec:   e8 1f fd ff ff         	call 0x8048410 <puts>
0x80486f1:   83 c4 04               	add esp, 0x4
0x80486f4:   68 1c 89 04 08         	push 0x804891c ; "/__   \\_ __ __ _ _ __  ___ / _| ___  _ __ _ __ ___   ___ _ __     "
0x80486f9:   e8 12 fd ff ff         	call 0x8048410 <puts>
0x80486fe:   83 c4 04               	add esp, 0x4
0x8048701:   68 60 89 04 08         	push 0x8048960 ; "  / /\\/ '__/ _` | '_ \\/ __| |_ / _ \\| '__| '_ ` _ \\ / _ \\ '__|"
0x8048706:   e8 05 fd ff ff         	call 0x8048410 <puts>
0x804870b:   83 c4 04               	add esp, 0x4
0x804870e:   68 a0 89 04 08         	push 0x80489a0 ; " / /  | | | (_| | | | \\__ \\  _| (_) | |  | | | | | |  __/ |      "
0x8048713:   e8 f8 fc ff ff         	call 0x8048410 <puts>
0x8048718:   83 c4 04               	add esp, 0x4
0x804871b:   68 e4 89 04 08         	push 0x80489e4 ; " \\/   |_|  \\__,_|_| |_|___/_|  \\___/|_|  |_| |_| |_|\\___|_|    "
0x8048720:   e8 eb fc ff ff         	call 0x8048410 <puts>
0x8048725:   83 c4 04               	add esp, 0x4
0x8048728:   68 24 8a 04 08         	push 0x8048a24 ; "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
0x804872d:   e8 de fc ff ff         	call 0x8048410 <puts>
0x8048732:   83 c4 04               	add esp, 0x4
0x8048735:   68 68 8a 04 08         	push 0x8048a68 ; "        ~ Anagram Checker w/o any Steganography bullshit ~         "
0x804873a:   e8 d1 fc ff ff         	call 0x8048410 <puts>
0x804873f:   83 c4 04               	add esp, 0x4
0x8048742:   68 ac 8a 04 08         	push 0x8048aac ; "             (Too bad this isn't worth 2999 points)                "
0x8048747:   e8 c4 fc ff ff         	call 0x8048410 <puts>
0x804874c:   83 c4 04               	add esp, 0x4
0x804874f:   68 24 8a 04 08         	push 0x8048a24 ; "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
0x8048754:   e8 b7 fc ff ff         	call 0x8048410 <puts>
0x8048759:   83 c4 04               	add esp, 0x4
0x804875c:   a1 34 a0 04 08         	mov eax, dword [ 0x804a034 ]
0x8048761:   50                     	push eax
0x8048762:   e8 99 fc ff ff         	call 0x8048400 <fflush>
0x8048767:   83 c4 04               	add esp, 0x4
0x804876a:   68 f0 8a 04 08         	push 0x8048af0 ; "Word #1: "
0x804876f:   e8 7c fc ff ff         	call 0x80483f0 <printf>
0x8048774:   83 c4 04               	add esp, 0x4
0x8048777:   a1 34 a0 04 08         	mov eax, dword [ 0x804a034 ]
0x804877c:   50                     	push eax
0x804877d:   e8 7e fc ff ff         	call 0x8048400 <fflush>
0x8048782:   83 c4 04               	add esp, 0x4
0x8048785:   8d 85 00 ff ff ff      	lea eax, dword [ ebp + 0xffffff00 ]
0x804878b:   50                     	push eax
0x804878c:   68 fa 8a 04 08         	push 0x8048afa ; "%s"
0x8048791:   e8 ba fc ff ff         	call 0x8048450 <scanf>
0x8048796:   83 c4 08               	add esp, 0x8
0x8048799:   68 fd 8a 04 08         	push 0x8048afd ; "Word #2: "
0x804879e:   e8 4d fc ff ff         	call 0x80483f0 <printf>
0x80487a3:   83 c4 04               	add esp, 0x4
0x80487a6:   a1 34 a0 04 08         	mov eax, dword [ 0x804a034 ]
0x80487ab:   50                     	push eax
0x80487ac:   e8 4f fc ff ff         	call 0x8048400 <fflush>
0x80487b1:   83 c4 04               	add esp, 0x4
0x80487b4:   8d 85 80 fe ff ff      	lea eax, dword [ ebp + 0xfffffe80 ]
0x80487ba:   50                     	push eax
0x80487bb:   68 fa 8a 04 08         	push 0x8048afa ; "%s"
0x80487c0:   e8 8b fc ff ff         	call 0x8048450 <scanf>
0x80487c5:   83 c4 08               	add esp, 0x8
0x80487c8:   a1 34 a0 04 08         	mov eax, dword [ 0x804a034 ]
0x80487cd:   50                     	push eax
0x80487ce:   e8 2d fc ff ff         	call 0x8048400 <fflush>
0x80487d3:   83 c4 04               	add esp, 0x4
0x80487d6:   8d 85 80 fe ff ff      	lea eax, dword [ ebp + 0xfffffe80 ]
0x80487dc:   50                     	push eax
0x80487dd:   8d 85 00 ff ff ff      	lea eax, dword [ ebp + 0xffffff00 ]
0x80487e3:   50                     	push eax
0x80487e4:   e8 a5 fd ff ff         	call 0x804858e <transcheck>
0x80487e9:   83 c4 08               	add esp, 0x8
0x80487ec:   84 c0                  	test al, al
0x80487ee:   74 2b                  	jz 0x804881b <main+0x13d>
0x80487f0:   8d 85 80 fe ff ff      	lea eax, dword [ ebp + 0xfffffe80 ]
0x80487f6:   50                     	push eax
0x80487f7:   8d 85 00 ff ff ff      	lea eax, dword [ ebp + 0xffffff00 ]
0x80487fd:   50                     	push eax
0x80487fe:   68 07 8b 04 08         	push 0x8048b07 ; "%s and %s are anagrams\n"
0x8048803:   e8 e8 fb ff ff         	call 0x80483f0 <printf>
0x8048808:   83 c4 0c               	add esp, 0xc
0x804880b:   a1 34 a0 04 08         	mov eax, dword [ 0x804a034 ]
0x8048810:   50                     	push eax
0x8048811:   e8 ea fb ff ff         	call 0x8048400 <fflush>
0x8048816:   83 c4 04               	add esp, 0x4
0x8048819:   eb 29                  	jmp 0x8048844 <main+0x166>
0x804881b:   8d 85 80 fe ff ff      	lea eax, dword [ ebp + 0xfffffe80 ]
0x8048821:   50                     	push eax
0x8048822:   8d 85 00 ff ff ff      	lea eax, dword [ ebp + 0xffffff00 ]
0x8048828:   50                     	push eax
0x8048829:   68 1f 8b 04 08         	push 0x8048b1f ; "%s and %s are not anagrams\n"
0x804882e:   e8 bd fb ff ff         	call 0x80483f0 <printf>
0x8048833:   83 c4 0c               	add esp, 0xc
0x8048836:   a1 34 a0 04 08         	mov eax, dword [ 0x804a034 ]
0x804883b:   50                     	push eax
0x804883c:   e8 bf fb ff ff         	call 0x8048400 <fflush>
0x8048841:   83 c4 04               	add esp, 0x4
0x8048844:   b8 00 00 00 00         	mov eax, 0x0
0x8048849:   c9                     	leave
0x804884a:   c3                     	ret
0x804884b:   66 90                  	xchg ax, ax
0x804884d:   66 90                  	xchg ax, ax
0x804884f:   90                     	nop
; function: __libc_csu_init at 0x8048850 -- 0x80488ac
0x8048850:   55                     	push ebp
0x8048851:   57                     	push edi
0x8048852:   56                     	push esi
0x8048853:   53                     	push ebx
0x8048854:   e8 57 fc ff ff         	call 0x80484b0 <__x86.get_pc_thunk.bx>
0x8048859:   81 c3 a7 17 00 00      	add ebx, 0x17a7
0x804885f:   83 ec 0c               	sub esp, 0xc
0x8048862:   8b 6c 24 20            	mov ebp, dword [ esp + 0x20 ]
0x8048866:   8d b3 0c ff ff ff      	lea esi, dword [ ebx + 0xffffff0c ]
0x804886c:   e8 47 fb ff ff         	call 0x80483b8 <_init>
0x8048871:   8d 83 08 ff ff ff      	lea eax, dword [ ebx + 0xffffff08 ]
0x8048877:   29 c6                  	sub esi, eax
0x8048879:   c1 fe 02               	sar esi, 0x2
0x804887c:   85 f6                  	test esi, esi
0x804887e:   74 25                  	jz 0x80488a5 <__libc_csu_init+0x55>
0x8048880:   31 ff                  	xor edi, edi
0x8048882:   8d b6 00 00 00 00      	lea esi, dword [ esi + 0x0 ]
0x8048888:   83 ec 04               	sub esp, 0x4
0x804888b:   ff 74 24 2c            	push dword [ esp + 0x2c ]
0x804888f:   ff 74 24 2c            	push dword [ esp + 0x2c ]
0x8048893:   55                     	push ebp
0x8048894:   ff 94 bb 08 ff ff ff   	call dword [ ebx + edi * 0x2 + 0xffffff08 ]
0x804889b:   83 c7 01               	add edi, 0x1
0x804889e:   83 c4 10               	add esp, 0x10
0x80488a1:   39 f7                  	cmp edi, esi
0x80488a3:   75 e3                  	jnz 0x8048888 <__libc_csu_init+0x38>
0x80488a5:   83 c4 0c               	add esp, 0xc
0x80488a8:   5b                     	pop ebx
0x80488a9:   5e                     	pop esi
0x80488aa:   5f                     	pop edi
0x80488ab:   5d                     	pop ebp
0x80488ac:   c3                     	ret
; function: function_80488ad at 0x80488ad -- 0x80488af
0x80488ad:   8d 76 00               	lea esi, dword [ esi + 0x0 ]
; function: __libc_csu_fini at 0x80488b0 -- 0x80488b1
0x80488b0:   f3 c3                  	rep ret
; section: .fini
; function: _fini at 0x80488b4 -- 0x80488c7
0x80488b4:   53                     	push ebx
0x80488b5:   83 ec 08               	sub esp, 0x8
0x80488b8:   e8 f3 fb ff ff         	call 0x80484b0 <__x86.get_pc_thunk.bx>
0x80488bd:   81 c3 43 17 00 00      	add ebx, 0x1743
0x80488c3:   83 c4 08               	add esp, 0x8
0x80488c6:   5b                     	pop ebx
0x80488c7:   c3                     	ret

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00                                           |.2.             |
; section: .gnu.hash
0x80481ac:   02 00 00 00 0a 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 23 00 20 0a 00 00 00  0b 00 00 00 29 1d 8c 1c   |.#. ........)...|
0x80481cc:   ad 4b e3 c0                                        |.K..            |
; section: .dynsym
0x80481d0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481e0:   35 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |5...............|
0x80481f0:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x8048200:   30 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |0...............|
0x8048210:   51 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |Q...............|
0x8048220:   6a 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |j........... ...|
0x8048230:   43 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |C...............|
0x8048240:   58 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |X...............|
0x8048250:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x8048260:   3c 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |<...............|
0x8048270:   4a 00 00 00 34 a0 04 08  04 00 00 00 11 00 1a 00   |J...4...........|
0x8048280:   0b 00 00 00 cc 88 04 08  04 00 00 00 11 00 10 00   |................|
; section: .dynstr
0x8048290:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x80482a0:   74 64 69 6e 5f 75 73 65  64 00 66 66 6c 75 73 68   |tdin_used.fflush|
0x80482b0:   00 5f 5f 69 73 6f 63 39  39 5f 73 63 61 6e 66 00   |.__isoc99_scanf.|
0x80482c0:   70 75 74 73 00 70 72 69  6e 74 66 00 63 61 6c 6c   |puts.printf.call|
0x80482d0:   6f 63 00 73 74 72 6c 65  6e 00 73 74 64 6f 75 74   |oc.strlen.stdout|
0x80482e0:   00 73 79 73 74 65 6d 00  5f 5f 6c 69 62 63 5f 73   |.system.__libc_s|
0x80482f0:   74 61 72 74 5f 6d 61 69  6e 00 5f 5f 67 6d 6f 6e   |tart_main.__gmon|
0x8048300:   5f 73 74 61 72 74 5f 5f  00 47 4c 49 42 43 5f 32   |_start__.GLIBC_2|
0x8048310:   2e 37 00 47 4c 49 42 43  5f 32 2e 30 00            |.7.GLIBC_2.0.   |
; section: .gnu.version
0x804831e:   00 00 02 00 02 00 02 00  02 00 00 00 02 00 02 00   |................|
0x804832e:   03 00 02 00 02 00 01 00                            |........        |
; section: .gnu.version_r
0x8048338:   01 00 02 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x8048348:   17 69 69 0d 00 00 03 00  79 00 00 00 10 00 00 00   |.ii.....y.......|
0x8048358:   10 69 69 0d 00 00 02 00  83 00 00 00 00 00 00 00   |.ii.............|
; section: .rel.dyn
0x8048368:   fc 9f 04 08 06 05 00 00  34 a0 04 08 05 0a 00 00   |........4.......|
; section: .rel.plt
0x8048378:   0c a0 04 08 07 01 00 00  10 a0 04 08 07 02 00 00   |................|
0x8048388:   14 a0 04 08 07 03 00 00  18 a0 04 08 07 04 00 00   |................|
0x8048398:   1c a0 04 08 07 06 00 00  20 a0 04 08 07 07 00 00   |........ .......|
0x80483a8:   24 a0 04 08 07 08 00 00  28 a0 04 08 07 09 00 00   |$.......(.......|
; section: .rodata
0x80488c8:   03 00 00 00 01 00 02 00                            |........        |
0x80488d0:   2f 62 69 6e 2f 73 68 00                            |/bin/sh.        |   "/bin/sh"
0x80488d8:   20 5f 5f 5f 5f 5f 20 20  20 20 20 20 20 20 20 20   | _____          |   " _____                      __                                     "
0x80488e8:   20 20 20 20 20 20 20 20  20 20 20 20 5f 5f 20 20   |            __  |
0x80488f8:   20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x8048908:   20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x8048918:   20 20 20 00                                        |   .            |
0x804891c:   2f 5f 5f 20 20 20 5c 5f  20 5f 5f 20 5f 5f 20 5f   |/__   \_ __ __ _|   "/__   \\_ __ __ _ _ __  ___ / _| ___  _ __ _ __ ___   ___ _ __     "
0x804892c:   20 5f 20 5f 5f 20 20 5f  5f 5f 20 2f 20 5f 7c 20   | _ __  ___ / _| |
0x804893c:   5f 5f 5f 20 20 5f 20 5f  5f 20 5f 20 5f 5f 20 5f   |___  _ __ _ __ _|
0x804894c:   5f 5f 20 20 20 5f 5f 5f  20 5f 20 5f 5f 20 20 20   |__   ___ _ __   |
0x804895c:   20 20 00                                           |  .             |
0x804895f:   00                                                 |.               |
0x8048960:   20 20 2f 20 2f 5c 2f 20  27 5f 5f 2f 20 5f 60 20   |  / /\/ '__/ _` |   "  / /\\/ '__/ _` | '_ \\/ __| |_ / _ \\| '__| '_ ` _ \\ / _ \\ '__|"
0x8048970:   7c 20 27 5f 20 5c 2f 20  5f 5f 7c 20 7c 5f 20 2f   || '_ \/ __| |_ /|
0x8048980:   20 5f 20 5c 7c 20 27 5f  5f 7c 20 27 5f 20 60 20   | _ \| '__| '_ ` |
0x8048990:   5f 20 5c 20 2f 20 5f 20  5c 20 27 5f 5f 7c 00      |_ \ / _ \ '__|. |
0x804899f:   00                                                 |.               |
0x80489a0:   20 2f 20 2f 20 20 7c 20  7c 20 7c 20 28 5f 7c 20   | / /  | | | (_| |   " / /  | | | (_| | | | \\__ \\  _| (_) | |  | | | | | |  __/ |      "
0x80489b0:   7c 20 7c 20 7c 20 5c 5f  5f 20 5c 20 20 5f 7c 20   || | | \__ \  _| |
0x80489c0:   28 5f 29 20 7c 20 7c 20  20 7c 20 7c 20 7c 20 7c   |(_) | |  | | | ||
0x80489d0:   20 7c 20 7c 20 20 5f 5f  2f 20 7c 20 20 20 20 20   | | |  __/ |     |
0x80489e0:   20 00                                              | .              |
0x80489e2:   00 00                                              |..              |
0x80489e4:   20 5c 2f 20 20 20 7c 5f  7c 20 20 5c 5f 5f 2c 5f   | \/   |_|  \__,_|   " \\/   |_|  \\__,_|_| |_|___/_|  \\___/|_|  |_| |_| |_|\\___|_|    "
0x80489f4:   7c 5f 7c 20 7c 5f 7c 5f  5f 5f 2f 5f 7c 20 20 5c   ||_| |_|___/_|  \|
0x8048a04:   5f 5f 5f 2f 7c 5f 7c 20  20 7c 5f 7c 20 7c 5f 7c   |___/|_|  |_| |_||
0x8048a14:   20 7c 5f 7c 5c 5f 5f 5f  7c 5f 7c 20 20 20 20 00   | |_|\___|_|    .|
0x8048a24:   78 78 78 78 78 78 78 78  78 78 78 78 78 78 78 78   |xxxxxxxxxxxxxxxx|   "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
0x8048a34:   78 78 78 78 78 78 78 78  78 78 78 78 78 78 78 78   |xxxxxxxxxxxxxxxx|
0x8048a44:   78 78 78 78 78 78 78 78  78 78 78 78 78 78 78 78   |xxxxxxxxxxxxxxxx|
0x8048a54:   78 78 78 78 78 78 78 78  78 78 78 78 78 78 78 78   |xxxxxxxxxxxxxxxx|
0x8048a64:   78 78 78 00                                        |xxx.            |
0x8048a68:   20 20 20 20 20 20 20 20  7e 20 41 6e 61 67 72 61   |        ~ Anagra|   "        ~ Anagram Checker w/o any Steganography bullshit ~         "
0x8048a78:   6d 20 43 68 65 63 6b 65  72 20 77 2f 6f 20 61 6e   |m Checker w/o an|
0x8048a88:   79 20 53 74 65 67 61 6e  6f 67 72 61 70 68 79 20   |y Steganography |
0x8048a98:   62 75 6c 6c 73 68 69 74  20 7e 20 20 20 20 20 20   |bullshit ~      |
0x8048aa8:   20 20 20 00                                        |   .            |
0x8048aac:   20 20 20 20 20 20 20 20  20 20 20 20 20 28 54 6f   |             (To|   "             (Too bad this isn't worth 2999 points)                "
0x8048abc:   6f 20 62 61 64 20 74 68  69 73 20 69 73 6e 27 74   |o bad this isn't|
0x8048acc:   20 77 6f 72 74 68 20 32  39 39 39 20 70 6f 69 6e   | worth 2999 poin|
0x8048adc:   74 73 29 20 20 20 20 20  20 20 20 20 20 20 20 20   |ts)             |
0x8048aec:   20 20 20 00                                        |   .            |
0x8048af0:   57 6f 72 64 20 23 31 3a  20 00                     |Word #1: .      |   "Word #1: "
0x8048afa:   25 73 00                                           |%s.             |   "%s"
0x8048afd:   57 6f 72 64 20 23 32 3a  20 00                     |Word #2: .      |   "Word #2: "
0x8048b07:   25 73 20 61 6e 64 20 25  73 20 61 72 65 20 61 6e   |%s and %s are an|   "%s and %s are anagrams\n"
0x8048b17:   61 67 72 61 6d 73 0a 00                            |agrams..        |
0x8048b1f:   25 73 20 61 6e 64 20 25  73 20 61 72 65 20 6e 6f   |%s and %s are no|   "%s and %s are not anagrams\n"
0x8048b2f:   74 20 61 6e 61 67 72 61  6d 73 0a 00               |t anagrams..    |
; section: .eh_frame_hdr
0x8048b3c:   01 1b 03 3b 38 00 00 00  06 00 00 00 a4 f8 ff ff   |...;8...........|
0x8048b4c:   54 00 00 00 3f fa ff ff  78 00 00 00 52 fa ff ff   |T...?...x...R...|
0x8048b5c:   98 00 00 00 a2 fb ff ff  bc 00 00 00 14 fd ff ff   |................|
0x8048b6c:   dc 00 00 00 74 fd ff ff  28 01 00 00               |....t...(...    |
; section: .eh_frame
0x8048b78:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x8048b88:   1b 0c 04 04 88 01 00 00  20 00 00 00 1c 00 00 00   |........ .......|
0x8048b98:   48 f8 ff ff 90 00 00 00  00 0e 08 46 0e 0c 4a 0f   |H..........F..J.|
0x8048ba8:   0b 74 04 78 00 3f 1a 3b  2a 32 24 22 1c 00 00 00   |.t.x.?.;*2$"....|
0x8048bb8:   40 00 00 00 bf f9 ff ff  13 00 00 00 00 41 0e 08   |@............A..|
0x8048bc8:   85 02 42 0d 05 4f c5 0c  04 04 00 00 20 00 00 00   |..B..O...... ...|
0x8048bd8:   60 00 00 00 b2 f9 ff ff  50 01 00 00 00 41 0e 08   |`.......P....A..|
0x8048be8:   85 02 42 0d 05 44 83 03  03 48 01 c5 c3 0c 04 04   |..B..D...H......|
0x8048bf8:   1c 00 00 00 84 00 00 00  de fa ff ff 6d 01 00 00   |............m...|
0x8048c08:   00 41 0e 08 85 02 42 0d  05 03 69 01 c5 0c 04 04   |.A....B...i.....|
0x8048c18:   48 00 00 00 a4 00 00 00  30 fc ff ff 5d 00 00 00   |H.......0...]...|
0x8048c28:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x8048c38:   41 0e 14 83 05 4e 0e 20  69 0e 24 44 0e 28 44 0e   |A....N. i.$D.(D.|
0x8048c48:   2c 41 0e 30 4d 0e 20 47  0e 14 41 c3 0e 10 41 c6   |,A.0M. G..A...A.|
0x8048c58:   0e 0c 41 c7 0e 08 41 c5  0e 04 00 00 10 00 00 00   |..A...A.........|
0x8048c68:   f0 00 00 00 44 fc ff ff  02 00 00 00 00 00 00 00   |....D...........|
0x8048c78:   00 00 00 00                                        |....            |
; section: .init_array
0x8049f08:   50 85 04 08                                        |P...            |
; section: .fini_array
0x8049f0c:   30 85 04 08                                        |0...            |
; section: .jcr
0x8049f10:   00 00 00 00                                        |....            |
; section: .dynamic
0x8049f14:   01 00 00 00 01 00 00 00  0c 00 00 00 b8 83 04 08   |................|
0x8049f24:   0d 00 00 00 b4 88 04 08  19 00 00 00 08 9f 04 08   |................|
0x8049f34:   1b 00 00 00 04 00 00 00  1a 00 00 00 0c 9f 04 08   |................|
0x8049f44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x8049f54:   05 00 00 00 90 82 04 08  06 00 00 00 d0 81 04 08   |................|
0x8049f64:   0a 00 00 00 8d 00 00 00  0b 00 00 00 10 00 00 00   |................|
0x8049f74:   15 00 00 00 00 00 00 00  03 00 00 00 00 a0 04 08   |................|
0x8049f84:   02 00 00 00 40 00 00 00  14 00 00 00 11 00 00 00   |....@...........|
0x8049f94:   17 00 00 00 78 83 04 08  11 00 00 00 68 83 04 08   |....x.......h...|
0x8049fa4:   12 00 00 00 10 00 00 00  13 00 00 00 08 00 00 00   |................|
0x8049fb4:   fe ff ff 6f 38 83 04 08  ff ff ff 6f 01 00 00 00   |...o8......o....|
0x8049fc4:   f0 ff ff 6f 1e 83 04 08  00 00 00 00 00 00 00 00   |...o............|
0x8049fd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x8049fe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x8049ff4:   00 00 00 00 00 00 00 00                            |........        |
; section: .got
0x8049ffc:   00 00 00 00                                        |....            |
; section: .got.plt
0x804a000:   14 9f 04 08 00 00 00 00  00 00 00 00 f6 83 04 08   |................|
0x804a010:   06 84 04 08 16 84 04 08  26 84 04 08 36 84 04 08   |........&...6...|
0x804a020:   46 84 04 08 56 84 04 08  66 84 04 08               |F...V...f...    |
; section: .data
0x804a02c:   00 00 00 00 00 00 00 00                            |........        |
